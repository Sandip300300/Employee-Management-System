@model Employee_Management_System.ViewModel.EmployeeListViewModel

@{
    ViewData["Title"] = "Index";
    var successMessage = TempData["SuccessMessage"];
}

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<h1>Index</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<div class="row">
    <div class="col-12 text-right">
        <form method="get" asp-action="Index" class="d-inline-block">
            <div class="input-group mb-3">
                <input type="text" class="form-control" placeholder="Search by Employee Name" name="searchTerm" value="@ViewContext.HttpContext.Request.Query["searchTerm"]" />
                <button class="btn btn-primary" type="submit">Search</button>
            </div>
        </form>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Employees.First().Name)</th>
            <th>@Html.DisplayNameFor(model => model.Employees.First().Email)</th>
            <th>@Html.DisplayNameFor(model => model.Employees.First().Phone)</th>
            <th>@Html.DisplayNameFor(model => model.Employees.First().Position)</th>
            <th>@Html.DisplayNameFor(model => model.Employees.First().JoiningDate)</th>
            <th>@Html.DisplayNameFor(model => model.Employees.First().Department.DepartmentName)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Employees)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                <td>@Html.DisplayFor(modelItem => item.Position)</td>
                <td>@Html.DisplayFor(modelItem => item.JoiningDate)</td>
                <td>@Html.DisplayFor(modelItem => item.Department.DepartmentName)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (successMessage != null)
{
    <script>
        console.log('Success message received!');
        Swal.fire({
            icon: 'success',
            title: 'Deleted!',
            text: '@successMessage',
            showConfirmButton: false,
            timer: 1500
        });
    </script>
}

<!-- Pagination Controls -->
<div class="pagination justify-content-center">
    @if (Model.PagingInfo.CurrentPage > 1)
    {
        <a class="page-link" asp-action="Index" asp-route-pageNumber="1" asp-route-searchTerm="@ViewContext.HttpContext.Request.Query["searchTerm"]">First</a>
        <a class="page-link" asp-action="Index" asp-route-pageNumber="@Model.PagingInfo.CurrentPage - 1" asp-route-searchTerm="@ViewContext.HttpContext.Request.Query["searchTerm"]">Previous</a>
    }

    @for (var paginationPage = 1; paginationPage <= Model.PagingInfo.TotalPages; paginationPage++)
    {
        <a class="page-link @(paginationPage == Model.PagingInfo.CurrentPage ? "active" : "")"
           asp-action="Index"
           asp-route-pageNumber="@paginationPage"
           asp-route-searchTerm="@ViewContext.HttpContext.Request.Query["searchTerm"]">
            @paginationPage
        </a>
    }

    @if (Model.PagingInfo.CurrentPage < Model.PagingInfo.TotalPages)
    {
        <a class="page-link" asp-action="Index" asp-route-pageNumber="@Model.PagingInfo.CurrentPage + 1" asp-route-searchTerm="@ViewContext.HttpContext.Request.Query["searchTerm"]">Next</a>
        <a class="page-link" asp-action="Index" asp-route-pageNumber="@Model.PagingInfo.TotalPages" asp-route-searchTerm="@ViewContext.HttpContext.Request.Query["searchTerm"]">Last</a>
    }
</div>
